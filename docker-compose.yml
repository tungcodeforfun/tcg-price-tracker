version: '3.8'

services:
  # Main application service
  tcg-tracker:
    build:
      context: ./tcgtracker
      dockerfile: Dockerfile
      target: development
    ports:
      - "8000:8000"
    environment:
      - APP_DEBUG=true
      - APP_RELOAD=true
      - APP_LOG_LEVEL=DEBUG
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=tcgtracker
      - DB_USER=tcgtracker
      - DB_PASSWORD=tcgtracker_dev_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - SECURITY_SECRET_KEY=dev_secret_key_change_in_production_must_be_32_chars_long
      - API_TCGPLAYER_CLIENT_ID=your_tcgplayer_client_id
      - API_TCGPLAYER_CLIENT_SECRET=your_tcgplayer_client_secret
      - API_TCGPLAYER_AUTH_CODE=your_tcgplayer_auth_code
      - API_EBAY_CLIENT_ID=your_ebay_client_id
      - API_EBAY_CLIENT_SECRET=your_ebay_client_secret
    volumes:
      - ./tcgtracker/src:/app/src
      - ./tcgtracker/tests:/app/tests
    depends_on:
      - postgres
      - redis
    networks:
      - tcg-network
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=tcgtracker
      - POSTGRES_USER=tcgtracker
      - POSTGRES_PASSWORD=tcgtracker_dev_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - tcg-network
    restart: unless-stopped

  # PostgreSQL read replica (for production-like testing)
  postgres-replica:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=tcgtracker
      - POSTGRES_USER=tcgtracker
      - POSTGRES_PASSWORD=tcgtracker_dev_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5433:5432"
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
    networks:
      - tcg-network
    restart: unless-stopped
    profiles:
      - replica

  # Redis cache and message broker
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tcg-network
    restart: unless-stopped

  # Celery worker for background tasks
  celery-worker:
    build:
      context: ./tcgtracker
      dockerfile: Dockerfile
      target: development
    command: celery -A tcgtracker.workers.celery_app worker --loglevel=info --concurrency=4
    environment:
      - APP_DEBUG=true
      - APP_LOG_LEVEL=DEBUG
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=tcgtracker
      - DB_USER=tcgtracker
      - DB_PASSWORD=tcgtracker_dev_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - SECURITY_SECRET_KEY=dev_secret_key_change_in_production_must_be_32_chars_long
      - API_TCGPLAYER_CLIENT_ID=your_tcgplayer_client_id
      - API_TCGPLAYER_CLIENT_SECRET=your_tcgplayer_client_secret
      - API_TCGPLAYER_AUTH_CODE=your_tcgplayer_auth_code
      - API_EBAY_CLIENT_ID=your_ebay_client_id
      - API_EBAY_CLIENT_SECRET=your_ebay_client_secret
    volumes:
      - ./tcgtracker/src:/app/src
    depends_on:
      - postgres
      - redis
    networks:
      - tcg-network
    restart: unless-stopped
    profiles:
      - worker

  # Celery beat scheduler
  celery-beat:
    build:
      context: ./tcgtracker
      dockerfile: Dockerfile
      target: development
    command: celery -A tcgtracker.workers.celery_app beat --loglevel=info
    environment:
      - APP_DEBUG=true
      - APP_LOG_LEVEL=DEBUG
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=tcgtracker
      - DB_USER=tcgtracker
      - DB_PASSWORD=tcgtracker_dev_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - SECURITY_SECRET_KEY=dev_secret_key_change_in_production_must_be_32_chars_long
      - API_TCGPLAYER_CLIENT_ID=your_tcgplayer_client_id
      - API_TCGPLAYER_CLIENT_SECRET=your_tcgplayer_client_secret
      - API_TCGPLAYER_AUTH_CODE=your_tcgplayer_auth_code
      - API_EBAY_CLIENT_ID=your_ebay_client_id
      - API_EBAY_CLIENT_SECRET=your_ebay_client_secret
    volumes:
      - ./tcgtracker/src:/app/src
    depends_on:
      - postgres
      - redis
    networks:
      - tcg-network
    restart: unless-stopped
    profiles:
      - scheduler

  # Redis Commander (Web UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - tcg-network
    restart: unless-stopped
    profiles:
      - tools

  # pgAdmin (Web UI for PostgreSQL)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@tcgtracker.dev
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - tcg-network
    restart: unless-stopped
    profiles:
      - tools

volumes:
  postgres_data:
  postgres_replica_data:
  redis_data:
  pgadmin_data:

networks:
  tcg-network:
    driver: bridge